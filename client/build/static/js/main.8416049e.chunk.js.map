{"version":3,"sources":["components/navigation/Header.js","App.js","components/production/ProductionCard.js","components/production/ProductionContainer.js","components/pages/Home.js","components/errors/Error.js","components/production/ProductionForm.js","components/production/ProductionDetail.js","components/production/ProductionEdit.js","components/auth/Registration.jsx","routes/index.js","index.js"],"names":["Header","_ref","currentUser","updateUser","menu","setMenu","useState","navigate","useNavigate","_jsxs","Nav","children","_jsx","NavH1","Menu","onClick","Link","to","_Fragment","handleDelete","fetch","method","then","resp","ok","toast","success","json","errorObj","error","GiHamburgerMenu","size","styled","h1","div","App","productions","setProductions","setCurrentUser","production_edit","setProductionEdit","useEffect","catch","message","handleEdit","production","id","value","GlobalStyle","Toaster","Outlet","context","addProduction","updateProduction","updated_production","map","deleteProduction","deleted_production","filter","createGlobalStyle","ProductionCard","title","budget","genre","image","Card","src","alt","li","ProductionContainer","useOutletContext","Title","CardContainer","ul","Home","Image","img","attrs","Error","useRouteError","productionSchema","object","string","required","min","oneOf","number","positive","max","test","director","description","initialValues","ProductionForm","className","Formik","validationSchema","onSubmit","formData","headers","body","JSON","stringify","createdProduction","values","errors","touched","isSubmitting","handleBlur","handleChange","handleSubmit","Form","type","name","onChange","onBlur","rows","cols","disabled","form","ProductionDetail","setProduction","setError","projectId","useParams","crew_members","CardDetail","cast","role","user_id","status","ProductionFormEdit","formSchema","yup","shape","formik","useFormik","Object","signupSchema","username","email","password_hash","signinSchema","Registration","isLogin","setIsLogin","current","user","htmlFor","router","createBrowserRouter","path","element","errorElement","index","ProductionEdit","rootElement","document","getElementById","root","createRoot","console","log","render","RouterProvider"],"mappings":"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","file":"static/js/main.8416049e.chunk.js","sourcesContent":["import { useState } from 'react'\nimport {Link, useNavigate} from 'react-router-dom'\nimport styled from 'styled-components'\nimport { GiHamburgerMenu } from 'react-icons/gi'\nimport toast from \"react-hot-toast\"\n\nfunction Header({ currentUser, updateUser }) {\n const [menu, setMenu] = useState(false)\n const navigate = useNavigate()\n\n  const handleDelete = () => {\n    fetch(\"/api/v1/signout\", {method: \"DELETE\"})\n    .then(resp => {\n      if (resp.ok) {\n        updateUser(null)\n        toast.success(\"See you soon!\")\n        navigate(\"/\")\n\n      } else {\n        resp.json().then(errorObj => toast.error(errorObj.error))\n      }\n    })\n  }\n    return (\n        <Nav> \n         <NavH1>Flatiron Theater Company</NavH1>\n         <Menu>\n           {!menu?\n           <div onClick={() => setMenu(!menu)}>\n             <GiHamburgerMenu size={30}/> \n           </div>:\n           <ul>\n            <li onClick={() => setMenu(!menu)}>x</li>\n            <li><Link to='/'> Home</Link></li>\n            {currentUser && (\n              <>\n                <li ><Link to='/productions/new'>New Production</Link></li>\n                  <button onClick={handleDelete}>Logout</button>\n              </>\n            )}\n            {!currentUser && <li><Link to='/registration'> Registration</Link></li>}\n           </ul>\n           }\n         </Menu>\n\n        </Nav>\n    )\n}\n\nexport default Header\n\n\nconst NavH1 = styled.h1`\nfont-family: 'Splash', cursive;\n`\nconst Nav = styled.div`\n  display: flex;\n  justify-content:space-between;\n  \n`;\n\nconst Menu = styled.div`\n  display: flex;\n  align-items: center;\n  a{\n    text-decoration: none;\n    color:white;\n    font-family:Arial;\n  }\n  a:hover{\n    color:pink\n  }\n  ul{\n    list-style:none;\n  }\n  \n`;","// 📚 Review With Students:\n// Request response cycle\n//Note: This was build using v5 of react-router-dom\nimport { Outlet, useNavigate } from 'react-router-dom'\nimport { createGlobalStyle } from 'styled-components'\nimport { useEffect, useState } from 'react'\nimport Header from './components/navigation/Header'\nimport toast, { Toaster } from \"react-hot-toast\"\nimport \"./App.css\"\n\nfunction App() {\n  const [productions, setProductions] = useState([])\n  const [currentUser, setCurrentUser] = useState(null);\n  const [production_edit, setProductionEdit] = useState(false)\n  const navigate = useNavigate()\n\n  //5.✅ GET Productions\n  useEffect(() => {\n    fetch(\"/api/v1/productions\")\n    .then(resp => {\n      if (resp.ok) { //! 200-299\n        resp.json().then(setProductions)\n      } else {\n        resp.json().then(errorObj => toast.error(errorObj.error))\n      }\n    })\n    .catch(errorObj => toast.error(errorObj.message))\n  }, []);\n  \n  useEffect(() => {\n    fetch(\"/api/v1/me\")\n    .then(resp => {\n      if (resp.ok) {\n        resp.json().then(setCurrentUser)\n      } else {\n        resp.json().then(errorObj => toast.error(errorObj.error))\n      }\n    })\n      .catch(errorObj => toast.error(errorObj.message))\n  }, []);\n  // 6.✅ navigate to client/src/components/ProductionForm.js\n\n  const addProduction = (production) => setProductions(productions => [...productions, production])\n  const updateProduction = (updated_production) => setProductions(productions => (\n    productions.map(production => production.id === updated_production.id ? updated_production : production)\n  ))\n  const deleteProduction = (deleted_production) => setProductions(productions => (\n    productions.filter((production) => production.id !== deleted_production.id)\n  ))\n\n  const handleEdit = (production) => {\n    setProductionEdit(production)\n    navigate(`/productions/${production.id}/edit`)\n  }\n\n  const updateUser = (value) => setCurrentUser(value)\n\n  return (\n    <>\n      <GlobalStyle />\n      <Header handleEdit={handleEdit} currentUser={currentUser} updateUser={updateUser} />\n      <Toaster />\n      <Outlet context={{ currentUser, updateUser, addProduction, updateProduction, deleteProduction, productions, production_edit, handleEdit }} />\n    </>\n  )\n}\n\nexport default App\n\nconst GlobalStyle = createGlobalStyle`\n    body{\n      background-color: black; \n      color:white;\n    }\n    `\n","import {Link} from 'react-router-dom'\nimport styled from 'styled-components'\n\n\nfunction ProductionCard({production}) {\n    const {title, budget, genre, image, id} = production\n\n    return (\n      <Card id={id}>\n        <Link to={`/productions/${id}`}> \n          <div>\n            <h2>{title}</h2>\n            <p>{genre}</p>\n            <p>$ {budget}</p>\n          </div>\n          <img src={image} alt={title}/>\n        </Link>\n      </Card>\n    )\n  }\n  \n  export default ProductionCard\n\n\n  const Card = styled.li`\n    display:flex;\n    flex-direction:row;\n    justify-content:start;\n    font-family:Arial, sans-serif;\n    margin:5px;\n    &:hover {\n      transform: scale(1.15);\n      transform-origin: top left;\n    }\n    a{\n      text-decoration:none;\n      color:white;\n    }\n    img{\n      width: 180px;\n      margin-left:50%;\n      mask-image: linear-gradient(to left, rgba(0, 0, 0, .9) 80%, transparent 100%);\n    }\n    position:relative;\n    div{\n     position:absolute;\n    }\n  `","import styled from 'styled-components'\nimport ProductionCard from './ProductionCard'\nimport { useOutletContext } from 'react-router-dom'\n\nfunction ProductionContainer() {\n    const { productions } = useOutletContext()\n    return (\n     <div>\n         <Title><span>F</span>latIron Theater <span>C</span>ompany</Title>\n         <CardContainer>\n                {productions && productions.map(production => <ProductionCard  key={production.id} production={production}  />)}\n         </CardContainer>\n     </div>\n    )\n  }\n  \nexport default ProductionContainer\n\nconst Title = styled.h1`\n    text-transform: uppercase;\n    font-family:Arial, sans-serif;\n    width:70px;\n    font-size: 70px;\n    line-height: .8;\n   \n    transform: scale(.7, 1.4);\n    \n    span{\n        color:#42ddf5;\n    }\n`\n\n\nconst CardContainer = styled.ul`\n    display:flex;\n    flex-direction:column;\n\n`\n","import styled from 'styled-components'\nimport ProductionContainer from '../production/ProductionContainer'\n\nfunction Home({productions}){\n    return(\n    <div>\n        <Image /> \n        <ProductionContainer productions={productions} />\n    </div>\n    )\n}\n\nexport default Home\n\nconst Image = styled.img.attrs(() => ({\n    src:'https://images.unsplash.com/photo-1518834107812-67b0b7c58434?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1335&q=80', \n  }))`\n    position: absolute;\n    z-index:-1;\n  `\n  ","import { useRouteError } from 'react-router-dom'\n\nconst Error = () => {\n    const error = useRouteError();\n    return (\n        <div>{error.error.message}</div>\n    )\n}\n\nexport default Error","import React, {useState} from 'react'\nimport styled from 'styled-components'\nimport { useNavigate, useOutletContext } from 'react-router-dom'\nimport {object, string, number} from \"yup\"\nimport { Formik } from 'formik'\nimport toast from \"react-hot-toast\"\n\n// 6.✅ Verify formik and yet have been added to our package.json dependencies \n  // import the useFormik hook or the Formik component from formik\n  // import * as yup for yup\n\nlet productionSchema = object({\n  title: string(\"title must be of type string\").required(\"title is required\").min(1, \"titles must contain at least one character\"),\n  genre: string(\"genre must be of type string\").required(\"genre is required\").oneOf([\"Drama\", \"Musical\", \"Opera\"], \"Genre must be one of Musical, Opera or Drama\"),\n  budget: number(\"budget must be of type number\").positive(\"budget must be positive\").max(1000000, \"budget can be 1000000 at max\").required(\"budget must be present\"),\n  image: string().test(\"is-url\", \"image must be in the format jpg, jpeg, or png and start with http or https\", (value) => {\n    const regexPattern = /^https?:\\/\\/.*\\.(?:png|jpeg|jpg)$/g\n    return regexPattern.test(value)\n  }),\n  director: string(\"director must be of type string\").required(\"director is required\").min(1, \"director must contain at least one character\"),\n  description: string(\"description must be of type string\").required(\"description is required\").min(10, \"description has to be at least 10 characters\"),\n});\n\nconst initialValues = {\n  title: \"\",\n  genre: \"\",\n  budget: \"\",\n  image: \"\",\n  director: \"\",\n  description: \"\",\n}\n\n\nfunction ProductionForm() {\n  const { addProduction } = useOutletContext()\n\n  const navigate = useNavigate()\n\n  // 7.✅ Use yup to create client side validations\n \n\n\n  // 9.✅ useFormik hook or <Formik> component\n\n\n    return (\n      <div className='App'>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={productionSchema}\n          onSubmit={(formData) => {\n            fetch(\"/api/v1/productions\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify(formData)\n            })\n            .then(resp => {\n              if (resp.ok) {\n                resp.json().then(createdProduction => {\n                  addProduction(createdProduction)\n                  navigate(`/productions/${createdProduction.id}`)\n                })\n              } else {\n                resp.json().then(errorObj => toast.error(errorObj.error))\n              }\n            })\n            .catch(errorObj => toast.error(errorObj.message))\n          }}\n        >\n          {({values, errors, touched, isSubmitting, handleBlur, handleChange, handleSubmit}) => (\n            <Form onSubmit={handleSubmit}>\n              <label>Title </label>\n              <input type='text' name='title'  onChange={handleChange} onBlur={handleBlur} value={values.title} />\n              {errors.title && touched.title && <p className='error-message show'>{errors.title}</p>}\n\n              <label> Genre</label>\n              <input type='text' name='genre'  onChange={handleChange} onBlur={handleBlur} value={values.genre} />\n              {errors.genre && touched.genre && <p className='error-message show'>{errors.genre}</p>}\n\n              <label>Budget</label>\n              <input type='number' name='budget'  onChange={handleChange} onBlur={handleBlur} value={values.budget} />\n              {errors.budget && touched.budget && <p className='error-message show'>{errors.budget}</p>}\n\n              <label>Image</label>\n              <input type='text' name='image'   onChange={handleChange} onBlur={handleBlur} value={values.image} />\n              {errors.image && touched.image && <p className='error-message show'>{errors.image}</p>}\n\n              <label>Director</label>\n              <input type='text' name='director' onChange={handleChange} onBlur={handleBlur} value={values.director} />\n              {errors.director && touched.director && <p className='error-message show'>{errors.director}</p>}\n\n              <label>Description</label>\n              <textarea type='text' rows='4' cols='50' name='description'  onChange={handleChange} onBlur={handleBlur} value={values.description} />\n              {errors.description && touched.description && <p className='error-message show'>{errors.description}</p>}\n\n              <input type='submit' disabled={isSubmitting}/>\n            </Form> \n          )}\n        </Formik>\n      </div>\n    )\n  }\n  \n  export default ProductionForm\n\n  const Form = styled.form`\n    display:flex;\n    flex-direction:column;\n    width: 400px;\n    margin:auto;\n    font-family:Arial;\n    font-size:30px;\n    input[type=submit]{\n      background-color:#42ddf5;\n      color: white;\n      height:40px;\n      font-family:Arial;\n      font-size:30px;\n      margin-top:10px;\n      margin-bottom:10px;\n    }\n  `","import  {useParams, useNavigate } from 'react-router-dom'\nimport {useEffect, useState} from 'react'\nimport styled from 'styled-components'\nimport { useOutletContext } from 'react-router-dom'\nimport toast from \"react-hot-toast\"\n\nfunction ProductionDetail() {\n  const [production, setProduction] = useState(null)\n  const [error, setError] = useState(null)\n  const { handleEdit, deleteProduction, currentUser } = useOutletContext()\n\n  //Student Challenge: GET One \n  const { projectId } = useParams()\n  const navigate = useNavigate()\n\n  useEffect(()=>{\n    fetch(`/api/v1/productions/${projectId}`)\n      .then(resp => {\n        if (resp.ok) {\n          resp.json().then(setProduction)\n        } else {\n          resp.json().then(errorObj => toast.error(errorObj.error))\n        }\n      })\n      .catch(errorObj => toast.error(errorObj.message))\n  }, [projectId])\n\n  const handleDelete = () => {\n    fetch(`/api/v1/productions/${projectId}`, {method: \"DELETE\"})\n    .then(resp => {\n      if (resp.status === 204) { \n        deleteProduction(production)\n        navigate(\"/\")\n      } else {\n        resp.json().then(errorObj => toast.error(errorObj.error))\n      }\n    })\n    .catch(errorObj => toast.error(errorObj.message))\n  }\n  \n  if(error) return <h2>{error}</h2>\n\n  if (!production) return <h2>Loading...</h2>\n  \n  const {id, title, genre, image,description, crew_members} = production\n\n  return (\n      <CardDetail id={id}>\n        <h1>{title}</h1>\n          <div className='wrapper'>\n            <div>\n              <h3>Genre:</h3>\n              <p>{genre}</p>\n              <h3>Description:</h3>\n              <p>{description}</p>\n              <h2>Cast Members</h2>\n              <ul>\n                {crew_members.map(cast => <li key={cast.id}>{`${cast.role} : ${cast.name}`}</li>)}\n              </ul>\n            </div>\n            <img src={image} alt={title}/>\n          </div>\n      {\n        currentUser && currentUser.id === production.user_id && <>\n          <button onClick={()=> handleEdit(production)} >Edit Production</button>\n          <button onClick={handleDelete} >Delete Production</button>\n        </>\n      }\n      </CardDetail>\n    )\n  }\n  \n  export default ProductionDetail\n  const CardDetail = styled.li`\n    display:flex;\n    flex-direction:column;\n    justify-content:start;\n    font-family:Arial, sans-serif;\n    margin:5px;\n    h1{\n      font-size:60px;\n      border-bottom:solid;\n      border-color:#42ddf5;\n    }\n    .wrapper{\n      display:flex;\n      div{\n        margin:10px;\n      }\n    }\n    img{\n      width: 300px;\n    }\n    button{\n      background-color:#42ddf5;\n      color: white;\n      height:40px;\n      font-family:Arial;\n      font-size:30px;\n      margin-top:10px;\n    }\n  `","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useNavigate, useOutletContext } from 'react-router-dom'\nimport { useFormik } from \"formik\"\nimport * as yup from \"yup\"\nimport toast from \"react-hot-toast\" \n\n\nfunction ProductionFormEdit() {\n  const navigate = useNavigate()\n  const { updateProduction, production_edit, currentUser } = useOutletContext()\n\n  const formSchema = yup.object().shape({\n    title: yup.string().required(\"Must enter a title\"),\n    budget: yup.number().positive()\n  })\n\n  useEffect(() => {\n    debugger\n    if (!currentUser) {\n      toast.error(\"You don't have permissions to see this form: Please log in\")\n      navigate(\"/\");\n    } else if (currentUser.id !== production_edit.user_id) {\n      toast.error(\"You're not the owner of this production: Access Denied\")\n      navigate(\"/\");\n    }\n  }, [currentUser, navigate, production_edit.user_id]);\n\n  const formik = useFormik({\n    initialValues: {\n      title: production_edit.title,\n      genre: production_edit.genre,\n      budget: production_edit.budget,\n      image: production_edit.image,\n      director: production_edit.director,\n      description: production_edit.description,\n    },\n    validationSchema: formSchema,\n    onSubmit: (values) => {\n      // 10.✅ Add a PATCH\n    },\n  })\n\n  return (\n    <div className='App'>\n      {formik.errors && Object.values(formik.errors).map(error => <h2>{error}</h2>)}\n      <Form onSubmit={formik.handleSubmit}>\n        <label>Title </label>\n        <input type='text' name='title' value={formik.values.title} onChange={formik.handleChange} />\n\n        <label> Genre</label>\n        <input type='text' name='genre' value={formik.values.genre} onChange={formik.handleChange} />\n\n        <label>Budget</label>\n        <input type='number' name='budget' value={formik.values.budget} onChange={formik.handleChange} />\n\n        <label>Image</label>\n        <input type='text' name='image' value={formik.values.image} onChange={formik.handleChange} />\n\n        <label>Director</label>\n        <input type='text' name='director' value={formik.values.director} onChange={formik.handleChange} />\n\n        <label>Description</label>\n        <textarea type='text' rows='4' cols='50' name='description' value={formik.values.description} onChange={formik.handleChange} />\n\n        <input type='submit' />\n      </Form>\n    </div>\n  )\n}\n\nexport default ProductionFormEdit\n\nconst Form = styled.form`\n    display:flex;\n    flex-direction:column;\n    width: 400px;\n    margin:auto;\n    font-family:Arial;\n    font-size:30px;\n    input[type=submit]{\n      background-color:#42ddf5;\n      color: white;\n      height:40px;\n      font-family:Arial;\n      font-size:30px;\n      margin-top:10px;\n      margin-bottom:10px;\n    }\n  `","import { useState, useEffect } from \"react\";\nimport { object, string } from \"yup\";\nimport { useFormik, Formik } from \"formik\";\nimport styled from \"styled-components\"\nimport toast from \"react-hot-toast\"\nimport { useOutletContext, useNavigate } from \"react-router-dom\";\n\nconst signupSchema = object({\n  username: \n    string(\"username has to be a string\")\n    .max(25, \"username must be 25 characters max\")\n    .required(\"username is required\"),\n  email: \n    string(\"email has to be a string\")\n    .email(\"email must be valid\")\n    .max(80, \"email must be 80 characters max\")\n    .required(\"email is required\"),\n  password_hash: \n    string(\"password has to be a string\")\n    .min(8, \"password has to be at least 8 characters long\")\n    .max(25, \"password must be 25 characters long max\")\n    .required(\"password is required\"),\n});\n\nconst signinSchema = object({\n  email: \n    string(\"email has to be a string\")\n    .email(\"email must be valid\")\n    .max(80, \"email must be 80 characters max\")\n    .required(\"email is required\"),\n  password_hash: \n    string(\"password has to be a string\")\n    .min(8, \"password has to be at least 8 characters long\")\n    .max(25, \"password must be 25 characters long max\")\n    .required(\"password is required\"),\n});\n\nconst initialValues = {\n    username: \"\",\n    email: \"\",\n    password_hash: \"\",\n}\n\nconst Registration = () => {\n    const [isLogin, setIsLogin] = useState(true);\n    const { updateUser, currentUser } = useOutletContext();\n\n    const navigate = useNavigate()\n\n    useEffect(() => {\n      if (currentUser) {\n        navigate(\"/\");\n      }\n    }, [currentUser, navigate]);\n\n    return (\n      <div>\n        <h2>Please Log in or Sign Up</h2>\n        <h3>{isLogin ? \"Not a Member?\" : \"Already a member?\"}</h3>\n        <button onClick={() => setIsLogin((current) => !current)}>\n          {isLogin ? \"Register Now!\" : \"Login!\"}\n        </button>\n        <Formik\n          validationSchema={isLogin ? signinSchema : signupSchema}\n          initialValues={initialValues}\n          onSubmit={(formData) => {\n            const finalUrl = isLogin ? \"/api/v1/signin\" : \"/api/v1/signup\";\n            fetch(finalUrl, {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n              body: JSON.stringify(formData),\n            })\n              .then((resp) => {\n                if (resp.ok) {\n                  resp.json().then((user) => {\n                    updateUser(user);\n                    navigate(\"/\");\n                  });\n                } else {\n                  resp.json().then((errorObj) => toast.error(errorObj.error));\n                }\n              })\n              .catch((errorObj) => toast.error(errorObj.message));\n          }}\n        >\n          {({\n            values,\n            errors,\n            touched,\n            isSubmitting,\n            handleChange,\n            handleSubmit,\n            handleBlur,\n          }) => (\n            <Form onSubmit={handleSubmit}>\n              {!isLogin && (\n                <>\n                  <label htmlFor=\"username\">Username</label>\n                  <input\n                    type=\"text\"\n                    name=\"username\"\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    value={values.username}\n                  />\n                  {errors.username && touched.username && (\n                    <p className=\"error-message show\">{errors.username}</p>\n                  )}\n                </>\n              )}\n              <label htmlFor=\"email\">Email</label>\n              <input\n                type=\"email\"\n                name=\"email\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.email}\n              />\n              {errors.email && touched.email && (\n                <p className=\"error-message show\">{errors.email}</p>\n              )}\n              <label htmlFor=\"password_hash\">Password</label>\n              <input\n                type=\"password\"\n                name=\"password_hash\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.password_hash}\n              />\n              {errors.password_hash && touched.password_hash && (\n                <p className=\"error-message show\">{errors.password_hash}</p>\n              )}\n\n              <input\n                type=\"submit\"\n                value={isLogin ? \"Login!\" : \"Create Account!\"}\n                disabled={isSubmitting}\n              />\n            </Form>\n          )}\n        </Formik>\n      </div>\n    );\n};\n\nexport default Registration;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  margin: auto;\n  font-family: Arial;\n  font-size: 30px;\n  input[type=\"submit\"] {\n    background-color: #42ddf5;\n    color: white;\n    height: 40px;\n    font-family: Arial;\n    font-size: 30px;\n    margin-top: 10px;\n    margin-bottom: 10px;\n  }\n`;","import { createBrowserRouter } from 'react-router-dom'\nimport App from '../App'\nimport Home from '../components/pages/Home'\nimport Error from '../components/errors/Error'\nimport ProductionForm from '../components/production/ProductionForm'\nimport ProductionDetail from '../components/production/ProductionDetail'\nimport ProductionEdit from '../components/production/ProductionEdit'\nimport Registration from '../components/auth/Registration'\n\nexport const router = createBrowserRouter([\n    {\n        path: \"/\",\n        element: <App />,\n        errorElement: <Error />,\n        children: [\n            {\n                index: true,\n                element: <Home />\n            },\n            {\n                path: \"registration\",\n                element: <Registration />\n            },\n            {\n                path: \"productions/new\",\n                element: <ProductionForm />\n            },\n            {\n                path: \"productions/:projectId/edit\",\n                element: <ProductionEdit />\n            },\n            {\n                path: \"/productions/:projectId\",\n                element: <ProductionDetail />\n            }\n        ]\n    }\n])","import { createRoot } from \"react-dom/client\";\nimport { router } from \"./routes\";\n\nimport { RouterProvider } from \"react-router-dom\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nconsole.log(\"🚀 ~ router:\", router)\nroot.render(\n  // <StrictMode>\n  <RouterProvider router={router} />\n  // </StrictMode>\n);"],"sourceRoot":""}